version: '3.8'

services:
    # Kafka (KRaft 모드)
    kafka:
        image: bitnami/kafka:3.7
        container_name: kafka
        ports:
            - "9092:9092"
        environment:
            - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
            - KAFKA_KRAFT_CLUSTER_ID=kraft-cluster-id
            - KAFKA_CFG_NODE_ID=1
            - KAFKA_CFG_PROCESS_ROLES=controller,broker
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,INTERNAL://kafka:29092
            - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,INTERNAL://:29092,CONTROLLER://:9093
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - ALLOW_PLAINTEXT_LISTENER=yes
        networks:
            - elk-net

    # Elasticsearch
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
            - xpack.security.transport.ssl.enabled=false
            - xpack.security.http.ssl.enabled=false
            - bootstrap.memory_lock=true
            - ES_JAVA_OPTS=-Xms512m -Xmx512m
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
        networks:
            - elk-net

    # Logstash
    logstash:
        image: docker.elastic.co/logstash/logstash:8.7.0
        container_name: logstash
        depends_on:
            - kafka
            - elasticsearch
        volumes:
            - ./logstash/pipeline:/usr/share/logstash/pipeline
        ports:
            - "5044:5044"
        networks:
            - elk-net

networks:
    elk-net:
        driver: bridge
