server:
    port: ${SERVER_PORT}

spring:
    application:
        name: snail-member-service
    datasource:
        url: jdbc:postgresql://${DATABASE_HOST}:${POSTGRESQL_DATABASE_PORT}/${POSTGRESQL_DATABASE_NAME}
        username: ${DB_USERNAME}
        password: ${DB_PASSWORD}
        driver-class-name: org.postgresql.Driver
    jpa:
        show-sql: true
        database: postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
            ddl-auto: update
        properties:
          hibernate:
              jdbc:
                lob:
                    non_contextual_creation: true
    sql:
        init:
            mode: always
    properties:
        hibernate:
            format_sql: true

    mail:
        host: smtp.gmail.com
        port: 587
        username: ${MAIL_USERNAME}
        password: ${MAIL_PASSWORD}
        properties:
            mail:
                smtp:
                    auth: true
                    starttls:
                        enable: true


    cloud:
        azure:
            storage:
                blob:
                    connection-string: ${AZURE_STORAGE_ACCOUNT_ENDPOINT}
                    container-name: ${AZURE_STORAGE_CONTAINER_NAME}
    servlet:
        multipart:
            max-file-size: 1MB
            max-request-size: 10MB
    kafka:
        bootstrap-servers: ${KAFKA_PORT}
        consumer:
            group-id: ${KAFKA_GROUP_ID}
    data:
        redis:
            sentinel:
                master: ${REDIS_MASTER}
                nodes:
                    - ${REDIS_PORT1}
                    - ${REDIS_PORT2}
                    - ${REDIS_PORT3}

mybatis:
    mapper-locations: classpath:/com/bockerl/snailmember/mapper/**/*.xml

springdoc:
    api-docs:
        enabled: true
    swagger-ui:
        enabled: true
        path: /swagger-ui.html

management:
  endpoints:
    web:
      exposure:
          include: "prometheus"
  endpoint:
    prometheus:
        enabled: true
  metrics:
      enable:
          all: true
      tags:
        application: ${spring.application.name}

spring.data.jpa.repositories.enabled: true
logging:
    level:
        com:
            bockerl:
                snailmember: DEBUG
        org:
            springframework:
                transaction: TRACE
                security: DEBUG
